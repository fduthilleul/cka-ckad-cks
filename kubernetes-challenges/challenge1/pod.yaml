# Check first the current Kubeconfig file
# (Add command)
# kubectl config set-credentials martin --client-certificate=/root/martin.crt --client-key=/root/martin.key
# kubectl config set-context developer --user=martin --cluster=kubernetes
# kubectl config set-context --current --namespace=development
# k run jekyll --image=kodekloud/jekyll-serve --labels="run=jekyll"
# k get po jekyll -o yaml > pod.yaml
# k create -f pod.yaml
# k get role -n development
# k describe -n development role developer-role
# k describe -n development rolebindings 
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: jekyll
  name: jekyll
  namespace: development
spec:
  containers:
  - image: kodekloud/jekyll-serve
    name: jekyll
    volumeMounts:
    - mountPath: /site
      name: site
  initContainers:
  - name: copy-jekyll-site
    image: kodekloud/jekyll
    command: ['jekyll', 'new', 'site']
    volumeMounts:
    - mountPath: /site
      name: site
  volumes:
  - name: site
    persistentVolumeClaim:
      claimName: jekyll-site
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jekyll-site
  namespace: development
spec: 
 accessModes:
    - ReadWriteMany
 volumeMode: Filesystem
 resources:
   requests:
     storage: 1Gi
 storageClassName: local-storage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: development
  name: developer-role
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["services", "persistentvolumeclaims", "pods"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: developer-rolebinding
  namespace: development
subjects:
- kind: User
  name: martin
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: developer-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: jekyll
  namespace: development
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: jekyll
  ports:
    - port: 8080
      targetPort: 4000
      nodePort: 30097
